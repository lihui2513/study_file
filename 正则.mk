# 正则表达





### 限定符

* ？ 表示前面的字符需要出现0次或者一次
* *表示前面的字符匹配0个或者多次
* +匹配出现一次以上的字符
* {6}表示允许出现的次数
* （）表示可以匹配（）内的字符
* |或运算符

### 字符类

* []表示方括号的内容代表要求匹配的字符只能取自于他们
* ^ 非运算符

### 元字符

以斜杠\开头

* \d 数字字符
* \w 单词字符（英文，数字以及下划线）
* \s 空白符（包含tab和换行符）
* \D 非数字字符
* \W非单词字符
* \S非空白字符
* . 任意字符，但不包括换行符
* ^匹配行首，$匹配行位

![image-20211123103255058](https://gitee.com/hi-hui/tuchuang/raw/master/img/image-20211123103255058.png)



# 系统入门

## 元字符

### 特殊元字符

![image-20211123111217111](https://gitee.com/hi-hui/tuchuang/raw/master/img/image-20211123111217111.png)

* 不同的系统每行文本结束位置默认"换行"会有区别，windows里是\r\n，在linux和mac中是\n

### 空白符

![image-20211123111659359](https://gitee.com/hi-hui/tuchuang/raw/master/img/image-20211123111659359.png)

### 量词

![image-20211123111739925](https://gitee.com/hi-hui/tuchuang/raw/master/img/image-20211123111739925.png)

### 范围

![image-20211123111913224](https://gitee.com/hi-hui/tuchuang/raw/master/img/image-20211123111913224.png)

### 贪婪模式非贪婪模式与独占模式

* 在量词后面加上？采用非贪婪匹配。
* 非贪婪模式会尽可能去匹配
* ![image-20211123190235987](https://gitee.com/hi-hui/tuchuang/raw/master/img/image-20211123190235987.png)

* 独占模式：类似于贪婪模式，但在匹配的过程中不会发生回溯

* 正则中默认的是贪婪匹配，贪婪匹配和非贪婪匹配都有可能进行回溯，独占模式也是进行贪婪匹配，但不进行回溯。

### 分组

* 使用括号进行分组，把括号里面看成一个整体。
* 不保存子分组（？：正则）
* 保存子分组，后续可以"再利用"，不保存子分组"后续无法再被利用"

### 匹配模式（？模式标识）

* 不区分英文字母大小写 (?i)

  1.不区分大小写模式的指定方式，使用模式修饰符(?i)

  2.修饰符如果在括号内，作用发内是这个括号的正则，而不是整个正则。

  3.使用编程语言时，可以使用预定义好的常量来指定匹配模式。

* 点号通配模式

* 多行模式

* 注释模式

  
